
group 'ch.unibas.dmi.dbis.polyphenydb'


version = versionMajor + '.' + versionMinor + versionQualifier


buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {

    }
}


repositories {
    mavenCentral()
}


apply plugin: 'java'
apply plugin: 'idea'



tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}



dependencies {
    compile project(':core')

    compile group: 'org.apache.calcite', name: 'calcite-linq4j', version: '1.18.0'

    compile group: 'org.slf4j', name: 'slf4j-api', version:'1.7.25'

    compile group: 'com.google.guava', name: 'guava', version:'19.0'
    compile group: 'com.datastax.cassandra', name: 'cassandra-driver-core', version:'3.6.0'


    // --- Test Compile ---
    testCompile project(path: ':core', configuration: 'testClasses')

    testCompile group: 'junit', name: 'junit', version:'4.12'

    testCompile group: 'org.cassandraunit', name: 'cassandra-unit', version:'3.5.0.1'
    testCompile(group: 'org.apache.cassandra', name: 'cassandra-all', version:'3.11.2') { exclude(module: 'log4j-over-slf4j') }
}


sourceSets {
    main {
        java {
            srcDirs = ["src/main/java"]
            outputDir = file(project.buildDir.absolutePath + "/classes")
        }
        resources {
            srcDirs = ["src/main/resources"]
        }
        output.resourcesDir = file(project.buildDir.absolutePath + "/classes")
    }
    test {
        java {
            srcDirs = ["src/test/java"]
            outputDir = file(project.buildDir.absolutePath + "/test-classes")
        }
        resources {
            srcDirs = ["src/test/resources"]
        }
        output.resourcesDir = file(project.buildDir.absolutePath + "/test-classes")
    }
}



/*
 * This file is based on code taken from the Apache Calcite project, which was released under the Apache License. 
 * The changes are released under the MIT license.
 *
 *
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to you under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License. 
 *
 *
 *  The MIT License (MIT)
 *
 *  Copyright (c) 2019 Databases and Information Systems Research Group, University of Basel, Switzerland
 *  
 *  Permission is hereby granted, free of charge, to any person obtaining a 
 *  copy of this software and associated documentation files (the "Software"), to deal 
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *  
 *  The above copyright notice and this permission notice shall be included in all
 *  copies or substantial portions of the Software.
 *  
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 *  SOFTWARE.
 */

/**
 * JavaDoc
 */
javadoc {
    // suppress most of the warnings
    options.addStringOption('Xdoclint:none', '-quiet')
    // Include private fields in JavaDoc
    options.memberLevel = JavadocMemberLevel.PRIVATE
    // Use HTML 5 for JavaDoc
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}




/**
 * JARs
 */
jar {
    manifest {
        attributes "Manifest-Version": "1.0"
        attributes "Copyright": "Databases and Information Systems Group, Department Mathematics and Computer Science, University of Basel, Switzerland"
        attributes "Version": "$version"
    }
}
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier 'sources'
    from sourceSets.main.allSource
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives jar // regular jar containing only the compiled source
    archives sourcesJar // jar file containing the java doc files
    archives javadocJar // jar file containing the source files
}






/**
 * IntelliJ
 */
idea {
    module {
        downloadJavadoc = true
        downloadSources = true

        inheritOutputDirs = false
        outputDir = file("${project.buildDir}/classes")
        testOutputDir = file("${project.buildDir}/test-classes")
    }
}