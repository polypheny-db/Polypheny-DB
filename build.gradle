import org.jetbrains.gradle.ext.*

buildscript {
    repositories {
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath group: "io.freefair.gradle", name: "lombok-plugin", version: lombok_version
        classpath group: "com.adarshr", name: "gradle-test-logger-plugin", version: gradle_test_logger_version
    }
}

allprojects {

    buildscript {
        repositories {
            mavenCentral()
            jcenter()
            maven {
                url "https://plugins.gradle.org/m2/"
            }
            maven {
                url "https://clojars.org/repo/"
            }
        }
    }

    apply plugin: "java-library"
    apply plugin: "io.freefair.lombok"
    apply plugin: "com.adarshr.test-logger"

    compileJava.options.encoding = "UTF-8"
    compileTestJava.options.encoding = "UTF-8"
    javadoc.options.encoding = "UTF-8"

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }

    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url "https://clojars.org/repo/"
        }
        maven {
            // DBIS Nexus
            url "https://dbis-nexus.dmi.unibas.ch/repository/maven2/"
        }
    }

    configurations.all {
        // check for updates every build
        resolutionStrategy.cacheChangingModulesFor 0, "seconds"
    }

    javadoc {
        if (JavaVersion.current().isJava9Compatible()) {
            options.addBooleanOption("html5", true)
        }
        // suppress most of the warnings
        options.addStringOption("Xdoclint:none", "-quiet")
        // Include private fields in JavaDoc
        options.memberLevel = JavadocMemberLevel.PRIVATE
    }

    testlogger {
        theme 'standard'
        showExceptions true
        showStackTraces true
        showFullStackTraces false
        showCauses true
        slowThreshold 2000
        showSummary true
        showSimpleNames false
        showPassed false
        showSkipped false
        showFailed true
        showStandardStreams false
        showPassedStandardStreams true
        showSkippedStandardStreams true
        showFailedStandardStreams true
        logLevel 'lifecycle'
    }

    idea {
        module {
            downloadJavadoc = true
            downloadSources = true

            inheritOutputDirs = false
            outputDir = file("${project.buildDir}/classes")
            testOutputDir = file("${project.buildDir}/test-classes")

            generatedSourceDirs += file("${project.buildDir}/generated-sources")
            generatedSourceDirs += file("${project.buildDir}/generated-test-sources")
        }
    }

}





